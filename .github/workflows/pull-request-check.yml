# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Pull Request Check

on:
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup Deployment
    runs-on: ubuntu-latest

    outputs:
      affected-projects: ${{ steps.affected-projects.outputs.projects }}
      branch: ${{ steps.extract-branch-name.outputs.branch }}
      yarn-cache-dir-path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      last-successful-commit: ${{ steps.last-successful-commit.outputs.commit_hash }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use cache for yarn
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: Setup packages
        run: yarn setup

      - name: Extract branch name
        id: extract-branch-name
        run: echo "::set-output name=branch::$([[ -z "${GITHUB_HEAD_REF}" ]] && echo ${GITHUB_REF#refs/heads/} || echo ${GITHUB_HEAD_REF})"

      - name: Debug
        run: echo "${{ steps.extract-branch-name.outputs.branch }}"

      - name: Get last successful commit
        id: last-successful-commit
        uses: nrwl/last-successful-commit-action@v1
        with:
          branch: ${{ steps.extract-branch-name.outputs.branch }}
          workflow_id: 'ci-cd.yml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug
        run: echo "${{ steps.last-successful-commit.outputs.commit_hash }}"

      - name: Get affected projects
        id: affected-projects
        run: echo "::set-output name=projects::$(yarn --silent affected:projects --base=${{ steps.last-successful-commit.outputs.commit_hash || 'origin/main' }})"

      - name: Debug
        run: echo "${{ steps.affected-projects.outputs.projects }}"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: Lint affected projects to main
        run: yarn affected:lint --base=origin/main

  compile:
    name: Compile
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: Compile
        run: yarn compile

      - name: Compile Test
        run: yarn compile-test

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [setup]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use cache for modules
        id: modules-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: modules-cache-${{ github.sha }}

      - name: Test affected projects to main
        run: yarn affected:test --parallel=10 --base=origin/main
